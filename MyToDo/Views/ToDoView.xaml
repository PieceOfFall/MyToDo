<UserControl x:Class="MyToDo.Views.ToDoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:cv="clr-namespace:MyToDo.Common.Converters"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:viewmodels="clr-namespace:MyToDo.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:ToDoViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <cv:BoolToVisibilityConverter x:Key="boolToVisibility"/>
        <cv:ReverseBoolToVisibilityConverter x:Key="reverseBoolToVisibility"/>
        <cv:ReverseBoolConverter x:Key="reverseBool"/>

        <Style x:Key="PaginationButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignChoiceChipPrimaryOutlineRadioButton}">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Height" Value="30" />
        </Style>
    </UserControl.Resources>
    
    
    <md:DialogHost>
        <!-- 待办新建/编辑区域 -->
        <md:DrawerHost IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <md:DrawerHost.RightDrawerContent>
                <DockPanel Width="500" LastChildFill="False">

                    <Grid Margin="20,20,20,0" DockPanel.Dock="Top">
                        <TextBlock Text="添加待办" Visibility="{Binding IsEdit,Converter={StaticResource reverseBoolToVisibility}}" FontSize="20" FontWeight="Bold" />
                        <TextBlock Text="修改待办" Visibility="{Binding IsEdit,Converter={StaticResource boolToVisibility}}" FontSize="20" FontWeight="Bold" />
                    </Grid>

                    <StackPanel Margin="20,10,20,10" Orientation="Horizontal" DockPanel.Dock="Top">
                        <TextBlock Text="状态 : " VerticalAlignment="Center"/>
                        <ComboBox SelectedIndex="{Binding CurrentTodo.Status}">
                            <ComboBoxItem>待办</ComboBoxItem>
                            <ComboBoxItem>已完成</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <DockPanel DockPanel.Dock="Top" Margin="20,10,20,10">

                        <StackPanel Orientation="Horizontal" Visibility="{Binding IsEdit,Converter={StaticResource boolToVisibility}}"
                                    DockPanel.Dock="Top" Margin="0,5,0,20">
                            <TextBlock  VerticalAlignment="Center" Text="发布人 : "/>
                            <TextBlock Padding="5,0,0,0" Text="{Binding Sender}" Foreground="{DynamicResource PrimaryHueLightBrush}" />
                        </StackPanel>
                        

                        <TextBlock VerticalAlignment="Center" Text="办理人 :"/>
                        <TextBox IsEnabled="{Binding IsEdit,Converter={StaticResource reverseBool}}" 
                                 Visibility="{Binding AddById,Converter={StaticResource boolToVisibility}}"
                                 Text="{Binding CurrentTodo.ReceiverId,UpdateSourceTrigger=PropertyChanged}" Margin="10" md:HintAssist.Hint="请输入办理人id">
                        </TextBox>
                        <TextBox IsEnabled="{Binding IsEdit,Converter={StaticResource reverseBool}}" 
                                  Visibility="{Binding AddByName,Converter={StaticResource boolToVisibility}}"
                                  Text="{Binding ReceiverName,UpdateSourceTrigger=PropertyChanged}" Margin="10" md:HintAssist.Hint="请输入办理人姓名">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding ExecuteCommand}" CommandParameter="查找办理人" />                                                                                                                                                                                                                                      
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                        <ComboBox Visibility="{Binding IsEdit,Converter={StaticResource reverseBoolToVisibility}}"
                                  SelectedIndex="{Binding AddMethodSelectedIndex}"
                                  md:HintAssist.Hint="请选择查找方式">
                            <ComboBoxItem Content=" ID 查找" />
                            <ComboBoxItem Content="姓名查找" />
                            <ComboBoxItem Content="部门查找" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ExecuteCommand}" 
                                   CommandParameter="选择添加方式" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top" Margin="20,10,20,10">
                        <TextBlock VerticalAlignment="Center" Text="概要 :"/>
                        <TextBox Text="{Binding CurrentTodo.Title}" Margin="10" md:HintAssist.Hint="请输入待办概要" DockPanel.Dock="Top" />
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Top" Margin="20,10,20,10" MaxHeight="210">
                        <TextBlock  VerticalAlignment="Center" Text="内容 :"/>
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <TextBox AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding CurrentTodo.Content}" Margin="15"
                                     md:HintAssist.Hint="请输入待办内容" DockPanel.Dock="Top" MaxLength="255" />
                        </ScrollViewer>
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Top" Margin="20,10,20,10">
                        <TextBlock  VerticalAlignment="Center" Text="到期 :"/>
                        <DatePicker
                                     SelectedDate="{Binding CurrentTodo.DueDate}"
                                     Width="400"
                                     md:HintAssist.Hint="选择到期时间"
                                     Style="{StaticResource MaterialDesignOutlinedDatePicker}"/>
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Top" Margin="20,10,20,10">
                        <TextBlock  VerticalAlignment="Center" Text="紧急程度 : "/>
                        <Border Width="20" Height="20" Background="{Binding CurrentUrgencyColor}"/>
                        <ComboBox SelectedIndex="{Binding UrgencySelectedIndex}" Margin="10,0,0,0"
                                  md:HintAssist.Hint="请选择紧急度">
                            <ComboBoxItem Background="Red" Content="紧 急 重 要" />
                            <ComboBoxItem Background="#d4675f" Content="不 紧 急 重 要" />
                            <ComboBoxItem Background="#d4b8b6" Content="紧 急 不 重 要" />
                            <ComboBoxItem Content="不紧急不重要" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding ExecuteCommand}" 
                                        CommandParameter="选择紧急程度" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                    </DockPanel>

                    <Grid Margin="20" DockPanel.Dock="Top">
                        <Button Content="添加"
                                Visibility="{Binding IsEdit,Converter={StaticResource reverseBoolToVisibility}}"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="保存"/>
                        <Button Content="修改"
                                Visibility="{Binding IsEdit,Converter={StaticResource boolToVisibility}}"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="保存"/>
                    </Grid>

                </DockPanel>
            </md:DrawerHost.RightDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!-- 顶部栏 -->
                <StackPanel Margin="15,0,0,0" Orientation="Horizontal">

                    <TextBox Width="250" md:HintAssist.Hint="查找待办事项..." Text="{Binding Search,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             Margin="40,0,0,0" md:TextFieldAssist.HasClearButton="True" VerticalAlignment="Center">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding ExecuteCommand}" CommandParameter="查询" />
                        </TextBox.InputBindings>    
                    </TextBox>



                    <StackPanel Orientation="Horizontal" Margin="10,10,0,0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <RadioButton Content="我 是 发 布 人"
                                         Command="{Binding SelectRadioCommand}" CommandParameter="0"
                                         Tag="True">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignRadioButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <RadioButton Content="我 是 办 事 人"
                                         Command="{Binding SelectRadioCommand}" CommandParameter="1"
                                         IsChecked="{Binding IsReceiver}"
                                         Tag="True">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignRadioButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                            <RadioButton Content="自 己 的 事 项"
                                         Command="{Binding SelectRadioCommand}" CommandParameter="2"
                                         Tag="True">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignRadioButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </RadioButton.Style>
                            </RadioButton>
                        </StackPanel>

                    </StackPanel>

                    <TextBlock Text="筛选：" Foreground="#9F9F9F" VerticalAlignment="Center" Margin="10,10,10,0" />
                    <ComboBox SelectedIndex="{Binding SelectedIndex}">
                        <ComboBoxItem>全部</ComboBoxItem>
                        <ComboBoxItem>待办</ComboBoxItem>
                        <ComboBoxItem>已完成</ComboBoxItem>
                    </ComboBox>


                </StackPanel>

                <Button Grid.Row="0" 
                        HorizontalAlignment="Right" 
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="新增"
                        Content="+ 添加待办" Margin="0,10,65,0"/>


                <!-- 待办显示区 -->
                <StackPanel Grid.Row="1" Margin="0,5,0,0">
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding ToDoDtos}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}">
                                    <Grid Width="220" 
                                      Margin="8"
                                      MinHeight="180" 
                                      MaxHeight="250">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                                <i:InvokeCommandAction 
                                                    CommandParameter="{Binding }"
                                                    Command="{Binding DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition />
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <md:PopupBox HorizontalAlignment="Right" Panel.ZIndex="2">
                                        <Button Content="删除"
                                                IsEnabled="{Binding DataContext.IsEnableDeleteButton, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"
                                                Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"/>
                                    </md:PopupBox>

                                        <Border CornerRadius="5" Grid.RowSpan="3">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="0">
                                                            <Setter Property="Background" Value="#ff3f34" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Status}" Value="1">
                                                            <Setter Property="Background" Value="#3CB371" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <Border Panel.ZIndex="1" Background="Transparent" CornerRadius="5" Grid.RowSpan="2">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Cursor" Value="Hand" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>


                                        <TextBlock FontWeight="Bold" Padding="10,5" Text="{Binding Title}" />
                                        <TextBlock MaxHeight="100" TextTrimming="CharacterEllipsis" Padding="10,5" Text="{Binding Content}" Grid.Row="1" />
                                        <DockPanel Grid.Row="2">
                                            <TextBlock Margin="3,0,0,3"
                                                       FontSize="12"
                                                       FontWeight="Light"
                                                       DockPanel.Dock="Left">
                                                <Run Text="截止时间:"/>
                                                <LineBreak/>
                                                <Run Text="{Binding DueDateStr}" />
                                            </TextBlock>
                                        </DockPanel>


                                        <!-- 装饰背景⚪ -->
                                        <Canvas ClipToBounds="True" Grid.RowSpan="2">
                                            <Border CornerRadius="100" Canvas.Top="10" Canvas.Right="-50" Width="120" Height="120" Background="#FFFFFF" Opacity="0.1" />
                                            <Border CornerRadius="100" Canvas.Top="80" Canvas.Right="-30" Width="120" Height="120" Background="#FFFFFF" Opacity="0.1" />
                                        </Canvas>
                                </Grid>
                                </md:TransitioningContent>
                                
                            </DataTemplate>
                            
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <!-- 分页组件 -->
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <hc:Pagination MaxPageCount="{Binding MaxPageCount}" PageIndex="{Binding PageIndex,Mode=TwoWay}" AutoHiding="True"
                                   Margin="20" PaginationButtonStyle="{StaticResource PaginationButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PageUpdated">
                                <i:InvokeCommandAction 
                                    CommandParameter="页码更新"
                                    Command="{Binding ExecuteCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </hc:Pagination>
                </StackPanel>
                
            </Grid>
        </md:DrawerHost>
        
        
    </md:DialogHost>
    
</UserControl>
